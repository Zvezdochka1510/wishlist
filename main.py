import telebot
from telebot import types
import sqlite3

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = telebot.TeleBot("7405564479:AAFF1Z8iNYSxqmtedDcjMYay8Xp74C8GFeg")


# –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
conn = sqlite3.connect('wishlist.db')

# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É wishlist, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
cursor = conn.cursor()
cursor.execute("""
    CREATE TABLE IF NOT EXISTS wishlist (
        id INTEGER PRIMARY KEY,
        user TEXT,
        url TEXT
    )
""")
conn.commit()

# –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü url –≤ —Ç–∞–±–ª–∏—Ü—É wishlist, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
try:
    cursor.execute("""
        ALTER TABLE wishlist ADD COLUMN IF NOT EXISTS url TEXT
    """)
except sqlite3.OperationalError:
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ wishlist –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    pass

# –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞
authorized_users = [2045383874, 998211350]

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ö–æ—Ç–µ–ª–æ–∫
wishlist = {
    '–ù–∞—Å—Ç—è': [],
    '–î–∞–Ω—è': []
}


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if message.from_user.id not in authorized_users:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return

    # –í—ã–≤–æ–¥–∏–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –º–µ–Ω—é
    markup = types.ReplyKeyboardMarkup(row_width=2)
    item1 = types.KeyboardButton("–ù–∞—Å—Ç–∏–Ω—ã —Ö–æ—Ç–µ–ª–∫–∏")
    item2 = types.KeyboardButton("–î–∞–Ω–∏–Ω—ã —Ö–æ—Ç–µ–ª–∫–∏")
    item3 = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ö–æ—Ç–µ–ª–∫—É")
    item4 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å —Ö–æ—Ç–µ–ª–∫—É")
    markup.add(item1, item2, item3, item4)

    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞—Å—Ç–∏–Ω—ã —Ö–æ—Ç–µ–ª–∫–∏"
@bot.message_handler(func=lambda message: message.text == "–ù–∞—Å—Ç–∏–Ω—ã —Ö–æ—Ç–µ–ª–∫–∏")
def show_nastia_wishlist(message):
    cursor.execute("SELECT url FROM wishlist WHERE user = '–ù–∞—Å—Ç—è'")
    wishlist_items = cursor.fetchall()
    if wishlist_items:
        wishlist_str = '\n'.join([item[0] for item in wishlist_items])
        bot.send_message(message.chat.id, f"–í–æ—Ç —Ö–æ—Ç–µ–ª–∫–∏ –ù–∞—Å—Ç–∏:\n{wishlist_str}")
    else:
        bot.send_message(message.chat.id, "–£ –ù–∞—Å—Ç–∏ –ø–æ–∫–∞ –Ω–µ—Ç —Ö–æ—Ç–µ–ª–æ–∫.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–∞–Ω–∏–Ω—ã —Ö–æ—Ç–µ–ª–∫–∏"
@bot.message_handler(func=lambda message: message.text == "–î–∞–Ω–∏–Ω—ã —Ö–æ—Ç–µ–ª–∫–∏")
def show_danya_wishlist(message):
    cursor.execute("SELECT url FROM wishlist WHERE user = '–î–∞–Ω—è'")
    wishlist_items = cursor.fetchall()
    if wishlist_items:
        wishlist_str = '\n'.join([item[0] for item in wishlist_items])
        bot.send_message(message.chat.id, f"–í–æ—Ç —Ö–æ—Ç–µ–ª–∫–∏ –î–∞–Ω–∏:\n{wishlist_str}")
    else:
        bot.send_message(message.chat.id, "–£ –î–∞–Ω–∏ –ø–æ–∫–∞ –Ω–µ—Ç —Ö–æ—Ç–µ–ª–æ–∫.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ö–æ—Ç–µ–ª–∫—É"
@bot.message_handler(func=lambda message: message.text == "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ö–æ—Ç–µ–ª–∫—É")
def add_wishlist_item(message):
    if message.from_user.id not in authorized_users:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é —Ö–æ—Ç–µ–ª–æ–∫.")
        return

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ö–æ—Ç–µ–ª–∫—É
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ö–æ—Ç–µ–ª–∫—É:")
    bot.register_next_step_handler(message, process_wishlist_item)


def process_wishlist_item(message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Å—ã–ª–∫–∞ –≤–∞–ª–∏–¥–Ω–∞—è
    if not message.text.startswith('http'):
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        bot.register_next_step_handler(message, process_wishlist_item)
        return

        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        user = message.from_user.first_name
        cursor.execute("INSERT INTO wishlist (user, url) VALUES (?, ?)", (user, message.text))
        conn.commit()

    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –≤ —Å–ø–∏—Å–æ–∫ —Ö–æ—Ç–µ–ª–æ–∫
    #if message.from_user.first_name == 'ü¶ãNestiaü¶ã':
    #    wishlist['–ù–∞—Å—Ç—è'].append(message.text)
    #elif message.from_user.first_name == '–î–∞–Ω–∏–∏–ª':
   #     wishlist['–î–∞–Ω—è'].append(message.text)
    #else:
    #    bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é —Ö–æ—Ç–µ–ª–æ–∫.")
    #    return

    # –°–æ–æ–±—â–∞–µ–º –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
    bot.send_message(message.chat.id, "–•–æ—Ç–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–£–¥–∞–ª–∏—Ç—å —Ö–æ—Ç–µ–ª–∫—É"
@bot.message_handler(func=lambda message: message.text == "–£–¥–∞–ª–∏—Ç—å —Ö–æ—Ç–µ–ª–∫—É")
def remove_wishlist_item(message):
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ö–æ—Ç–µ–ª–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ö–æ—Ç–µ–ª–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:")
    bot.register_next_step_handler(message, process_remove_wishlist_item)


def process_remove_wishlist_item(message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Å—ã–ª–∫–∞ –≤–∞–ª–∏–¥–Ω–∞—è
    if not message.text.startswith('http'):
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        bot.register_next_step_handler(message, process_remove_wishlist_item)
        return

    # –£–¥–∞–ª—è–µ–º —Å—Å—ã–ª–∫—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    user = message.from_user.first_name
    cursor.execute("DELETE FROM wishlist WHERE user = ? AND url = ?", (user, message.text))
    conn.commit()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–£–¥–∞–ª–∏—Ç—å —Ö–æ—Ç–µ–ª–∫—É"
#@bot.message_handler(func=lambda message: message.text == "–£–¥–∞–ª–∏—Ç—å —Ö–æ—Ç–µ–ª–∫—É")
#def remove_wishlist_item(message):
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ö–æ—Ç–µ–ª–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
 #   bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ö–æ—Ç–µ–ª–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:")
  #  bot.register_next_step_handler(message, process_remove_wishlist_item)


#def process_remove_wishlist_item(message):
    # –£–¥–∞–ª—è–µ–º —Å—Å—ã–ª–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞ —Ö–æ—Ç–µ–ª–æ–∫
    #if message.text in wishlist['–ù–∞—Å—Ç—è']:
    #    wishlist['–ù–∞—Å—Ç—è'].remove(message.text)
    #elif message.text in wishlist['–î–∞–Ω—è']:
    #    wishlist['–î–∞–Ω—è'].remove(message.text)
   # else:
    #    bot.send_message(message.chat.id, "–¢–∞–∫–æ–π —Å—Å—ã–ª–∫–∏ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ —Ö–æ—Ç–µ–ª–æ–∫.")
    #    return

    # –°–æ–æ–±—â–∞–µ–º –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏
    bot.send_message(message.chat.id, "–•–æ—Ç–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!")


# –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
cursor.close()
conn.close()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
